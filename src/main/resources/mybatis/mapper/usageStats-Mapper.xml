<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.admin.las.service.impl.UsageStatsMapper">
	<select id="dailyUserInquiry" resultType="kr.or.ddit.admin.las.service.UsageStatsVO">

	    <![CDATA[
	    WITH date_list AS (
	        SELECT TRUNC(SYSDATE, 'MM') + LEVEL - 1 AS login_date
	        FROM dual
	        CONNECT BY LEVEL <= TRUNC(SYSDATE) - TRUNC(SYSDATE, 'MM') + 1
	    ),
	    daily_login_counts AS (
	        SELECT
	            TO_CHAR(LL_CREATED_AT, 'YYYY-MM-DD') AS login_date,
	            COUNT(DISTINCT MEM_ID) AS user_count
	        FROM LOGIN_LOG
	        WHERE LL_STATUS = 'I'
	          AND LL_CREATED_AT >= TRUNC(SYSDATE, 'MM')
	          AND LL_CREATED_AT < TRUNC(SYSDATE) + 1
	        GROUP BY TO_CHAR(LL_CREATED_AT, 'YYYY-MM-DD')
	    )
	    SELECT
	        TO_CHAR(d.login_date, 'YYYY-MM-DD') AS login_date,
	        NVL(l.user_count, 0) AS user_count
	    FROM date_list d
	    LEFT JOIN daily_login_counts l
	      ON TO_CHAR(d.login_date, 'YYYY-MM-DD') = l.login_date
	    ORDER BY d.login_date
	    ]]>
	</select>

	<select id="monthlyUserInquiry" resultType="kr.or.ddit.admin.las.service.UsageStatsVO">
	    <![CDATA[
	    WITH month_list AS (
	        -- 현재 연도 1월부터 현재 월까지의 목록을 생성
	        SELECT ADD_MONTHS(TRUNC(SYSDATE, 'YY'), LEVEL - 1) AS login_month_date
	        FROM dual
	        CONNECT BY LEVEL <= MONTHS_BETWEEN(TRUNC(SYSDATE, 'MM'), TRUNC(SYSDATE, 'YY')) + 1
	    ),
	    monthly_login_counts AS (
	        -- 현재 연도의 월별 고유 사용자 수 집계 (가장 최근 기록과 무관하게)
	        SELECT TO_CHAR(LL_CREATED_AT, 'YYYY-MM') AS login_month,
	               COUNT(DISTINCT MEM_ID) AS user_count
	        FROM LOGIN_LOG
	        WHERE LL_STATUS = 'I'
	          AND LL_CREATED_AT >= TRUNC(SYSDATE, 'YY')
	          AND LL_CREATED_AT < ADD_MONTHS(TRUNC(SYSDATE, 'YY'), 12)
	        GROUP BY TO_CHAR(LL_CREATED_AT, 'YYYY-MM')
	    )
	    SELECT
	        TO_CHAR(d.login_month_date, 'YYYY-MM') AS login_month,
	        NVL(l.user_count, 0) AS user_count
	    FROM month_list d
	    LEFT JOIN monthly_login_counts l
	      ON TO_CHAR(d.login_month_date, 'YYYY-MM') = l.login_month
	    ORDER BY d.login_month_date
	    ]]>
	</select>

	<select id="liveUserList" parameterType="map" resultType="map">
		SELECT
		*
		FROM (
		SELECT
		ROW_NUMBER() OVER (ORDER BY A.MEM_ID DESC) AS RNUM,
		A.MEM_ID,
		A.MEM_NAME,
		A.LOGIN_TYPE,
		A.MEM_STUDENT,
		A.MEM_GEN,
		CASE WHEN
		A.LOGIN_TYPE = 'G33001' THEN '일반'
		WHEN A.LOGIN_TYPE = 'G33002' THEN
		'네이버'
		WHEN A.LOGIN_TYPE = 'G33003' THEN '카카오'
		ELSE '그 외 로그인'
		END AS
		LOGIN_TYPE_NAME,
		CASE WHEN A.MEM_STUDENT = 'N' THEN '대학생'
		WHEN
		A.MEM_STUDENT = 'Y' THEN '청소년'
		ELSE '일반인'
		END AS MEM_STUDENT_NAME,
		CASE
		WHEN TO_CHAR(A.MEM_GEN) = 'G11001' THEN '남'
		WHEN TO_CHAR(A.MEM_GEN) =
		'G11002' THEN '여'
		ELSE '그 외 성별'
		END AS MEM_GEN_NAME
		FROM
		MEMBER A
		INNER
		JOIN (
		SELECT
		MEM_ID
		FROM
		LOGIN_LOG
		GROUP BY
		MEM_ID
		HAVING
		COUNT(CASE WHEN
		LL_STATUS = 'I' THEN 1 END) > COUNT(CASE WHEN LL_STATUS = 'O'
		THEN 1
		END)
		) B ON A.MEM_ID = B.MEM_ID
		<where>
			<if test="gen != null and gen != ''">
				AND A.MEM_GEN = #{gen}
			</if>
			<if test="loginType != null and loginType != ''">
				AND A.LOGIN_TYPE = #{loginType}
			</if>
			<if test="keyword != null and keyword != ''">
				AND (
				A.MEM_NAME LIKE '%' || #{keyword} || '%'
				OR A.MEM_ID
				LIKE '%' || #{keyword} || '%'
				)
			</if>
		</where>
		ORDER BY A.MEM_ID DESC
		)
		WHERE RNUM BETWEEN #{startNo} AND #{endNo}
	</select>
	<select id="liveUserListCount" parameterType="map"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		MEMBER A
		INNER JOIN (
		SELECT
		MEM_ID
		FROM
		LOGIN_LOG
		GROUP
		BY
		MEM_ID
		HAVING
		COUNT(CASE WHEN LL_STATUS = 'I' THEN 1 END) > COUNT(CASE
		WHEN LL_STATUS = 'O'
		THEN 1 END)
		) B ON A.MEM_ID = B.MEM_ID
		<where>
			<if test="gen != null and gen != ''">
				AND A.MEM_GEN = #{gen}
			</if>
			<if test="loginType != null and loginType != ''">
				AND A.LOGIN_TYPE = #{loginType}
			</if>
			<if test="keyword != null and keyword != ''">
				AND (
				A.MEM_NAME LIKE '%' || #{keyword} || '%'
				OR A.MEM_ID
				LIKE '%' || #{keyword} || '%'
				)
			</if>
		</where>
	</select>

	<select id="pageVisitCount"
		resultType="kr.or.ddit.admin.las.service.VisitVO">
		<![CDATA[
		SELECT *
		FROM (
		    SELECT PL_TITLE, COUNT(*) AS COUNT
		    FROM PAGE_LOG
		    WHERE TRUNC(PL_CREATED_AT) = TRUNC(SYSDATE)
		    GROUP BY PL_TITLE
		    ORDER BY COUNT(*) DESC
		)
		WHERE ROWNUM <= 10
		]]>
	</select>
</mapper>