# front url
app.front-url=${PROD.SERVER.FRONT_URL}

# 운영환경 포트 (보통 80, 443 또는 다른 포트)
server.port=80

# 운영환경 데이터베이스 설정
spring.datasource.url=${PROD.DATABASE.URL}
spring.datasource.username=${PROD.DATABASE.USERNAME}
spring.datasource.password=${PROD.DATABASE.PASSWORD}

# 운영환경 JWT 설정
jwt.issuer=${PROD.AUTH.JWT.ISSUER}
jwt.secret_key=${PROD.AUTH.JWT.SECRET_KEY}

# API KEY
naver.client.id=${PROD.NAVER.CLIENT_ID}
naver.client.secret=${PROD.NAVER.CLIENT_SECRET}
kakao.api.key=${PROD.KAKAO.REST_API_KEY}
test.api.key=${PROD.TEST.API_KEY}
youtube.api.key=${PROD.YOUTUBE.API_KEY}
iamport.api.key=${PROD.IAMPORT.API_KEY}
iamport.api.secret=${PROD.IAMPORT.API_SECRET}
gemini.api.key=${PROD.AI.GEMINI.KEY}
gemini.api.url=${PROD.AI.GEMINI.URL}

#메일 설정
spring.mail.username=${PROD.MAIL.USERNAME}
spring.mail.password=${PROD.MAIL.PASSWORD}

# 운영환경 로깅 설정 (ERROR, WARN 레벨만)
logging.level.kr.or.ddit=DEBUG
logging.level.org.springframework=WARN
logging.level.org.mybatis=WARN
logging.level.root=ERROR

# 운영환경 보안 헤더 설정
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# 운영환경 데이터베이스 커넥션 풀 최적화
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000